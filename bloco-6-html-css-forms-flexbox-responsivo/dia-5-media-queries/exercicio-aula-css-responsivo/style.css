body {
    align-items: center;
    color: #525252;
    display: flex;
    flex-flow: column wrap;
    font-family: Raleway, sans-serif;
    justify-content: center;
    overflow: scroll;
    /* The overflow property specifies whether to clip the content or to add scrollbars 
    when the content of an element is too big to fit in the specified area.

    The overflow property has the following values:

    visible - Default. The overflow is not clipped. The content renders outside the element's box
    hidden - The overflow is clipped, and the rest of the content will be invisible
    scroll - The overflow is clipped, and a scrollbar is added to see the rest of the content
    auto - Similar to scroll, but it adds scrollbars only when necessary
*/
    width: 100vw; /* Em relação ao viewport, é sobre o tamanho no dispositivo do usuário */
  } /* Relative to 1% of the width of the viewport* * Viewport = the browser window size. If the viewport is 50cm wide, 1vw = 0.5cm*/
  
  h1 {
    font-family: Cinzel, serif;
    font-size: 48px;
  }
  
  h3 {
    font-size: 25px;
    margin: 0;
  }
  
  p {
    font-size: 18px;
    font-weight: 300;
  }
  
  p.trick {
    color: white;
    font-size: 14px;
  }
  
  p strong {
    font-weight: 700;
  }
  
  .card p:nth-last-child(1) {
    align-self: flex-end;
    font-size: 14px;
  }
  
  .cards {
    display: flex;
    flex-flow: row wrap;
  }
  
  .card {
    border-radius: 5px;
    color: white;
    display: none;
    flex-flow: row wrap;
    height: 200px;
    margin: 20px;
    padding: 20px;
    width: 200px;
  }
  
  .card:nth-of-type(1) {
    background-color: #0fa36b;
  }
  
  .card:nth-of-type(2) {
    background-color: #0255c2;
  }
  
  .card:nth-of-type(3) {
    background-color: #41197f;
  }

  /* Sintaxe:
  :nth-of-type(number) {
  css declarations;
} 

Selects the second element of div siblings 
div:nth-of-type(2) {
    background: red;
  }
  
Selects the second li element in a list 
  li:nth-of-type(2) {
    background: lightgreen;
  }
  
Selects every third element among any group of siblings 
  :nth-of-type(3) {
    background: yellow;
  } 
  
  Aqui ele se referencia pelos irmãos
  esse funciona para divs irmãs
  */

  @media (min-width: 500px) {
    .card:nth-of-type(1) {
        display: flex;
    }
  }

  @media (min-width: 600px) and (max-width: 1000px){
    .card.card:nth-of-type(2) {
        display: flex;
    /* 
       max-width = no máximo 1000px, abaixo de 1000px
       min-width = no mínimo 600px para que a estilização aconteça
       a partir de 600px a condição   */    
    }
  }

  @media (min-width: 650px){
    .card:nth-of-type(3) {
        display: flex;
    }
  }

  @media (max-width: 950px) {
    .card:nth-of-type(3) {
        display: flex;
    }
  }
  /* Trick não está aparecendo.
  Nesse caso, eu deveria usar min ou max?
  */
  @media (max-width: 500px){
    p.trick {
    /* Acho que quando usa p.trick a "hierarquia" é maior do que só .trick */
        color: blue;
    
        border: red solid;
        text-align: center;
    }
  }
  /* O gabarito usou ---> Display: block

    Displays an element as a block element (like <p>). 
    It starts on a new line, and takes up the whole width
  */